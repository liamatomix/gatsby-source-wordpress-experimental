"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.introspectAndStoreRemoteSchema = void 0;

require("source-map-support/register");

var _store = _interopRequireDefault(require("../../store"));

var _fetchGraphql = _interopRequireDefault(require("../../utils/fetch-graphql"));

var _graphqlQueries = require("../../utils/graphql-queries");

const introspectAndStoreRemoteSchema = async () => {
  const state = _store.default.getState();

  const {
    pluginOptions,
    helpers
  } = state.gatsbyApi;
  const {
    schemaWasChanged
  } = state.remoteSchema;
  const INTROSPECTION_CACHE_KEY = `${pluginOptions.url}--introspection-data`;
  let introspectionData = await helpers.cache.get(INTROSPECTION_CACHE_KEY);

  if (!introspectionData || schemaWasChanged) {
    const {
      data
    } = await (0, _fetchGraphql.default)({
      query: _graphqlQueries.introspectionQuery
    });
    introspectionData = data; // cache introspection response

    await helpers.cache.set(INTROSPECTION_CACHE_KEY, introspectionData);
  }

  const typeMap = new Map(introspectionData.__schema.types.map(type => [type.name, type]));

  _store.default.dispatch.remoteSchema.setState({
    introspectionData,
    typeMap
  });
};

exports.introspectAndStoreRemoteSchema = introspectAndStoreRemoteSchema;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9zdGVwcy9pbmdlc3QtcmVtb3RlLXNjaGVtYS9pbnRyb3NwZWN0LXJlbW90ZS1zY2hlbWEuanMiXSwibmFtZXMiOlsiaW50cm9zcGVjdEFuZFN0b3JlUmVtb3RlU2NoZW1hIiwic3RhdGUiLCJzdG9yZSIsImdldFN0YXRlIiwicGx1Z2luT3B0aW9ucyIsImhlbHBlcnMiLCJnYXRzYnlBcGkiLCJzY2hlbWFXYXNDaGFuZ2VkIiwicmVtb3RlU2NoZW1hIiwiSU5UUk9TUEVDVElPTl9DQUNIRV9LRVkiLCJ1cmwiLCJpbnRyb3NwZWN0aW9uRGF0YSIsImNhY2hlIiwiZ2V0IiwiZGF0YSIsInF1ZXJ5IiwiaW50cm9zcGVjdGlvblF1ZXJ5Iiwic2V0IiwidHlwZU1hcCIsIk1hcCIsIl9fc2NoZW1hIiwidHlwZXMiLCJtYXAiLCJ0eXBlIiwibmFtZSIsImRpc3BhdGNoIiwic2V0U3RhdGUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUVBLE1BQU1BLDhCQUE4QixHQUFHLFlBQVk7QUFDakQsUUFBTUMsS0FBSyxHQUFHQyxlQUFNQyxRQUFOLEVBQWQ7O0FBQ0EsUUFBTTtBQUFFQyxJQUFBQSxhQUFGO0FBQWlCQyxJQUFBQTtBQUFqQixNQUE2QkosS0FBSyxDQUFDSyxTQUF6QztBQUNBLFFBQU07QUFBRUMsSUFBQUE7QUFBRixNQUF1Qk4sS0FBSyxDQUFDTyxZQUFuQztBQUVBLFFBQU1DLHVCQUF1QixHQUFJLEdBQUVMLGFBQWEsQ0FBQ00sR0FBSSxzQkFBckQ7QUFDQSxNQUFJQyxpQkFBaUIsR0FBRyxNQUFNTixPQUFPLENBQUNPLEtBQVIsQ0FBY0MsR0FBZCxDQUFrQkosdUJBQWxCLENBQTlCOztBQUVBLE1BQUksQ0FBQ0UsaUJBQUQsSUFBc0JKLGdCQUExQixFQUE0QztBQUMxQyxVQUFNO0FBQUVPLE1BQUFBO0FBQUYsUUFBVyxNQUFNLDJCQUFhO0FBQ2xDQyxNQUFBQSxLQUFLLEVBQUVDO0FBRDJCLEtBQWIsQ0FBdkI7QUFJQUwsSUFBQUEsaUJBQWlCLEdBQUdHLElBQXBCLENBTDBDLENBTzFDOztBQUNBLFVBQU1ULE9BQU8sQ0FBQ08sS0FBUixDQUFjSyxHQUFkLENBQWtCUix1QkFBbEIsRUFBMkNFLGlCQUEzQyxDQUFOO0FBQ0Q7O0FBRUQsUUFBTU8sT0FBTyxHQUFHLElBQUlDLEdBQUosQ0FDZFIsaUJBQWlCLENBQUNTLFFBQWxCLENBQTJCQyxLQUEzQixDQUFpQ0MsR0FBakMsQ0FBc0NDLElBQUQsSUFBVSxDQUFDQSxJQUFJLENBQUNDLElBQU4sRUFBWUQsSUFBWixDQUEvQyxDQURjLENBQWhCOztBQUlBckIsaUJBQU11QixRQUFOLENBQWVqQixZQUFmLENBQTRCa0IsUUFBNUIsQ0FBcUM7QUFBRWYsSUFBQUEsaUJBQUY7QUFBcUJPLElBQUFBO0FBQXJCLEdBQXJDO0FBQ0QsQ0F4QkQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgc3RvcmUgZnJvbSBcIn4vc3RvcmVcIlxuaW1wb3J0IGZldGNoR3JhcGhxbCBmcm9tIFwifi91dGlscy9mZXRjaC1ncmFwaHFsXCJcbmltcG9ydCB7IGludHJvc3BlY3Rpb25RdWVyeSB9IGZyb20gXCJ+L3V0aWxzL2dyYXBocWwtcXVlcmllc1wiXG5cbmNvbnN0IGludHJvc3BlY3RBbmRTdG9yZVJlbW90ZVNjaGVtYSA9IGFzeW5jICgpID0+IHtcbiAgY29uc3Qgc3RhdGUgPSBzdG9yZS5nZXRTdGF0ZSgpXG4gIGNvbnN0IHsgcGx1Z2luT3B0aW9ucywgaGVscGVycyB9ID0gc3RhdGUuZ2F0c2J5QXBpXG4gIGNvbnN0IHsgc2NoZW1hV2FzQ2hhbmdlZCB9ID0gc3RhdGUucmVtb3RlU2NoZW1hXG5cbiAgY29uc3QgSU5UUk9TUEVDVElPTl9DQUNIRV9LRVkgPSBgJHtwbHVnaW5PcHRpb25zLnVybH0tLWludHJvc3BlY3Rpb24tZGF0YWBcbiAgbGV0IGludHJvc3BlY3Rpb25EYXRhID0gYXdhaXQgaGVscGVycy5jYWNoZS5nZXQoSU5UUk9TUEVDVElPTl9DQUNIRV9LRVkpXG5cbiAgaWYgKCFpbnRyb3NwZWN0aW9uRGF0YSB8fCBzY2hlbWFXYXNDaGFuZ2VkKSB7XG4gICAgY29uc3QgeyBkYXRhIH0gPSBhd2FpdCBmZXRjaEdyYXBocWwoe1xuICAgICAgcXVlcnk6IGludHJvc3BlY3Rpb25RdWVyeSxcbiAgICB9KVxuXG4gICAgaW50cm9zcGVjdGlvbkRhdGEgPSBkYXRhXG5cbiAgICAvLyBjYWNoZSBpbnRyb3NwZWN0aW9uIHJlc3BvbnNlXG4gICAgYXdhaXQgaGVscGVycy5jYWNoZS5zZXQoSU5UUk9TUEVDVElPTl9DQUNIRV9LRVksIGludHJvc3BlY3Rpb25EYXRhKVxuICB9XG5cbiAgY29uc3QgdHlwZU1hcCA9IG5ldyBNYXAoXG4gICAgaW50cm9zcGVjdGlvbkRhdGEuX19zY2hlbWEudHlwZXMubWFwKCh0eXBlKSA9PiBbdHlwZS5uYW1lLCB0eXBlXSlcbiAgKVxuXG4gIHN0b3JlLmRpc3BhdGNoLnJlbW90ZVNjaGVtYS5zZXRTdGF0ZSh7IGludHJvc3BlY3Rpb25EYXRhLCB0eXBlTWFwIH0pXG59XG5cbmV4cG9ydCB7IGludHJvc3BlY3RBbmRTdG9yZVJlbW90ZVNjaGVtYSB9XG4iXX0=